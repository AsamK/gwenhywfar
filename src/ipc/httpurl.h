/* This file is auto-generated from "httpurl.xml" by the typemaker
   tool of Gwenhywfar. 
   Do not edit this file -- all changes will be lost! */
#ifndef HTTPURL_H
#define HTTPURL_H

/** @page P_GWEN_HTTP_URL_PUBLIC GWEN_HttpUrl (public)
This page describes the properties of GWEN_HTTP_URL
@anchor GWEN_HTTP_URL_Protocol
<h3>Protocol</h3>
<p>
</p>
<p>
Set this property with @ref GWEN_HttpUrl_SetProtocol, 
get it with @ref GWEN_HttpUrl_GetProtocol
</p>

@anchor GWEN_HTTP_URL_Server
<h3>Server</h3>
<p>
</p>
<p>
Set this property with @ref GWEN_HttpUrl_SetServer, 
get it with @ref GWEN_HttpUrl_GetServer
</p>

@anchor GWEN_HTTP_URL_Port
<h3>Port</h3>
<p>
</p>
<p>
Set this property with @ref GWEN_HttpUrl_SetPort, 
get it with @ref GWEN_HttpUrl_GetPort
</p>

@anchor GWEN_HTTP_URL_Path
<h3>Path</h3>
<p>
</p>
<p>
Set this property with @ref GWEN_HttpUrl_SetPath, 
get it with @ref GWEN_HttpUrl_GetPath
</p>

@anchor GWEN_HTTP_URL_Vars
<h3>Vars</h3>
<p>
</p>
<p>
Set this property with @ref GWEN_HttpUrl_SetVars, 
get it with @ref GWEN_HttpUrl_GetVars
</p>

*/
#ifdef __cplusplus
extern "C" {
#endif

typedef struct GWEN_HTTP_URL GWEN_HTTP_URL;

#ifdef __cplusplus
} /* __cplusplus */
#endif

#include <gwenhywfar/db.h>
#include <gwenhywfar/misc.h>
#include <gwenhywfar/list2.h>
#include <gwenhywfar/types.h>
#include <gwenhywfar/httpurlfns.h>

#ifdef __cplusplus
extern "C" {
#endif


GWEN_LIST_FUNCTION_LIB_DEFS(GWEN_HTTP_URL, GWEN_HttpUrl, GWENHYWFAR_API)
GWEN_HTTP_URL_LIST *GWEN_HttpUrl_List_dup(const GWEN_HTTP_URL_LIST *stl);

GWEN_LIST2_FUNCTION_LIB_DEFS(GWEN_HTTP_URL, GWEN_HttpUrl, GWENHYWFAR_API)

/** Destroys all objects stored in the given LIST2 and the list itself
*/
GWENHYWFAR_API void GWEN_HttpUrl_List2_freeAll(GWEN_HTTP_URL_LIST2 *stl);
/** Creates a deep copy of the given LIST2.
*/
GWENHYWFAR_API GWEN_HTTP_URL_LIST2 *GWEN_HttpUrl_List2_dup(const GWEN_HTTP_URL_LIST2 *stl);

/** Creates a new object.
*/
GWENHYWFAR_API GWEN_HTTP_URL *GWEN_HttpUrl_new();
/** Destroys the given object.
*/
GWENHYWFAR_API void GWEN_HttpUrl_free(GWEN_HTTP_URL *st);
/** Increments the usage counter of the given object, so an additional free() is needed to destroy the object.
*/
GWENHYWFAR_API void GWEN_HttpUrl_Attach(GWEN_HTTP_URL *st);
/** Creates and returns a deep copy of thegiven object.
*/
GWENHYWFAR_API GWEN_HTTP_URL *GWEN_HttpUrl_dup(const GWEN_HTTP_URL*st);
/** Creates an object from the data in the given GWEN_DB_NODE
*/
GWENHYWFAR_API GWEN_HTTP_URL *GWEN_HttpUrl_fromDb(GWEN_DB_NODE *db);
/** Stores an object in the given GWEN_DB_NODE
*/
GWENHYWFAR_API int GWEN_HttpUrl_toDb(const GWEN_HTTP_URL*st, GWEN_DB_NODE *db);
/** Returns 0 if this object has not been modified, !=0 otherwise
*/
GWENHYWFAR_API int GWEN_HttpUrl_IsModified(const GWEN_HTTP_URL *st);
/** Sets the modified state of the given object
*/
GWENHYWFAR_API void GWEN_HttpUrl_SetModified(GWEN_HTTP_URL *st, int i);

/**
* Returns the property @ref GWEN_HTTP_URL_Protocol
*/
GWENHYWFAR_API const char *GWEN_HttpUrl_GetProtocol(const GWEN_HTTP_URL *el);
/**
* Set the property @ref GWEN_HTTP_URL_Protocol
*/
GWENHYWFAR_API void GWEN_HttpUrl_SetProtocol(GWEN_HTTP_URL *el, const char *d);

/**
* Returns the property @ref GWEN_HTTP_URL_Server
*/
GWENHYWFAR_API const char *GWEN_HttpUrl_GetServer(const GWEN_HTTP_URL *el);
/**
* Set the property @ref GWEN_HTTP_URL_Server
*/
GWENHYWFAR_API void GWEN_HttpUrl_SetServer(GWEN_HTTP_URL *el, const char *d);

/**
* Returns the property @ref GWEN_HTTP_URL_Port
*/
GWENHYWFAR_API int GWEN_HttpUrl_GetPort(const GWEN_HTTP_URL *el);
/**
* Set the property @ref GWEN_HTTP_URL_Port
*/
GWENHYWFAR_API void GWEN_HttpUrl_SetPort(GWEN_HTTP_URL *el, int d);

/**
* Returns the property @ref GWEN_HTTP_URL_Path
*/
GWENHYWFAR_API const char *GWEN_HttpUrl_GetPath(const GWEN_HTTP_URL *el);
/**
* Set the property @ref GWEN_HTTP_URL_Path
*/
GWENHYWFAR_API void GWEN_HttpUrl_SetPath(GWEN_HTTP_URL *el, const char *d);

/**
* Returns the property @ref GWEN_HTTP_URL_Vars
*/
GWENHYWFAR_API GWEN_DB_NODE *GWEN_HttpUrl_GetVars(const GWEN_HTTP_URL *el);
/**
* Set the property @ref GWEN_HTTP_URL_Vars
*/
GWENHYWFAR_API void GWEN_HttpUrl_SetVars(GWEN_HTTP_URL *el, GWEN_DB_NODE *d);



#ifdef __cplusplus
} /* __cplusplus */
#endif


#endif /* HTTPURL_H */
