<?xml?>

<tm2>
  <typedef id="char" lang="c">
    <identifier>char</identifier>
    <aedb_type>AEDB_DataType_Int</aedb_type>

    <code>
      <construct>
        $(dst)=0;
      </construct>
    
      <destruct>
      </destruct>
    
      <assign>
        $(dst)=$(src);
      </assign>
    
      <dup>
        $(dst)=$(src);
      </dup>

      <compare>
        if ($(dst)==$(src))
          $(retval)=0;
        else if ($(src)&lt;$(dst))
          $(retval)=-1;
        else
          $(retval)=1;
      </compare>
    
      <todb>
        $(retval)=GWEN_DB_SetIntValue($(db), GWEN_DB_FLAGS_OVERWRITE_VARS, "$(name)", (int)($(src)));
      </todb>
  
      <fromdb>
        $(dst)=(char)(GWEN_DB_GetIntValue($(db), "$(name)", 0, $(default)));
      </fromdb>

      <toxml>
        GWEN_XMLNode_SetIntValue($(db), "$(name)", (int)($(src)));
      </toxml>
  
      <fromxml>
        $(dst)=(char)(GWEN_XMLNode_GetIntValue($(db), "$(name)", $(default)));
      </fromxml>

      <toobject>
        {
          int64_t v64=(int64_t) ($(src));
          $(retval)=AEDB_Object_SetFieldInt64($(db), $(fieldId), v64);
        }
      </toobject>
    
      <fromobject>
        {
          int64_t v64;
          
          $(retval)=AEDB_Object_GetFieldInt64($(db), $(fieldId), &amp;v64);
          if ($(retval)&gt;=0)
            $(dst)=(char) v64;
        }
      </fromobject>
    
    </code>
      
  </typedef>
</tm2>
