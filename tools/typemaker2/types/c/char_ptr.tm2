<?xml?>

<tm2>

  <typedef id="char_ptr" type="pointer" basetype="char" lang="c">
    <identifier>char</identifier>
    <aedb_type>AEDB_DataType_String</aedb_type>

    <code>
      <construct>
        $(dst)=$(preset);
      </construct>
    
      <destruct>
        free($(src));
      </destruct>
    
      <assign>
        $(dst)=$(src);
      </assign>
    
      <dup>
        $(dst)=strdup($(src));
      </dup>
    
      <todb>
        if ($(src)) {
          $(retval)=GWEN_DB_SetCharValue($(db), GWEN_DB_FLAGS_OVERWRITE_VARS, "$(name)", $(src));
        }
        else {
          GWEN_DB_DeleteVar($(db), "$(name)");
          $(retval)=0;
        }
      </todb>
  
      <fromdb>
        {
          const char *s;
          
          s=GWEN_DB_GetCharValue($(db), "$(name)", 0, $(default));
          if (s)
           $(dst)=strdup(s);
        }
      </fromdb>

      <toxml>
        if ($(src)) {
#ifdef TYPEMAKER2_MEMBER_FLAGS_ATTRIBUTE_ON#
          GWEN_XMLNode_SetProperty($(db), "$(name)", $(src));
#else#
          GWEN_XMLNode_SetCharValue($(db), "$(name)", $(src));
#endif#
        }
        else {
          /* TODO: remove element */
        }
      </toxml>
  
      <fromxml>
        {
          const char *s;
          
#ifdef TYPEMAKER2_MEMBER_FLAGS_ATTRIBUTE_ON#
          s=GWEN_XMLNode_GetProperty($(db), "$(name)", $(default));
#else#
          s=GWEN_XMLNode_GetCharValue($(db), "$(name)", $(default));
#endif#
          if (s)
           $(dst)=strdup(s);
        }
      </fromxml>

      <toobject>
        if ($(src))
          $(retval)=AEDB_Object_SetFieldString($(db), $(fieldId), $(src));
        else 
          $(retval)=AEDB_Object_SetFieldString($(db), $(fieldId), NULL);
      </toobject>

      <fromobject>
        {
          const char *s;
          
          $(retval)=AEDB_Object_GetFieldString($(db), $(fieldId), &amp;s);
          if ($(retval)&gt;=0 &amp;&amp; s)
            $(dst)=strdup(s);
        }
      </fromobject>
    
    </code>

    <defaults>
      <!-- defaults flags etc for member declarations of this type -->
      <default>NULL</default>
      <preset>NULL</preset>
      <flags>own</flags>
      <setflags>const dup</setflags>
      <getflags>const</getflags>
      <dupflags>const</dupflags>
    </defaults>
  
  </typedef>

</tm2>
