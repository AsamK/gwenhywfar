<?xml?>

<tm2>
  <typedef id="int" lang="c">
    <identifier>int</identifier>
    <aedb_type>AEDB_DataType_Int</aedb_type>

    <code>
      <construct>
        $(dst)=$(preset);
      </construct>
    
      <destruct>
      </destruct>
    
      <assign>
        $(dst)=$(src);
      </assign>
    
      <dup>
        $(dst)=$(src);
      </dup>

      <compare>
        if ($(dst)==$(src))
          $(retval)=0;
        else if ($(src)&lt;$(dst))
          $(retval)=-1;
        else
          $(retval)=1;
      </compare>
    
      <todb>
#ifdef TYPEMAKER2_MEMBER_FLAGS_ENUM_ON#
        $(retval)=GWEN_DB_SetCharValue($(db), GWEN_DB_FLAGS_OVERWRITE_VARS, "$(name)", 
                  $(enum_tostring_fn)($(src)));
#else#
        $(retval)=GWEN_DB_SetIntValue($(db), GWEN_DB_FLAGS_OVERWRITE_VARS, "$(name)", $(src));
#endif#
      </todb>
  
      <fromdb>
#ifdef TYPEMAKER2_MEMBER_FLAGS_ENUM_ON#
       {
         const char *s;
         
         s=GWEN_DB_GetCharValue($(db), "$(name)", 0, NULL);
         if (s)
           $(dst)=$(enum_fromstring_fn)(s);
         else
           $(dst)=$(default);
       }
#else#
        $(dst)=GWEN_DB_GetIntValue($(db), "$(name)", 0, $(default));
#endif#
      </fromdb>

      <toxml>
#ifdef TYPEMAKER2_MEMBER_FLAGS_ENUM_ON#
        GWEN_XMLNode_SetCharValue($(db), "$(name)", 
                                  $(enum_tostring_fn)(($(src))));
#else#
        GWEN_XMLNode_SetIntValue($(db), "$(name)", ($(src)));
#endif#
      </toxml>
  
      <fromxml>
#ifdef TYPEMAKER2_MEMBER_FLAGS_ENUM_ON#
       {
         const char *s;
         
# ifdef TYPEMAKER2_MEMBER_FLAGS_ATTRIBUTE_ON#
         s=GWEN_XMLNode_GetProperty($(db), "$(name)", NULL);
# else#
         s=GWEN_XMLNode_GetCharValue($(db), "$(name)", NULL);
# endif#
         if (s)
           $(dst)=$(enum_fromstring_fn)(s);
         else
           $(dst)=$(default);
       }
#else#
        $(dst)=GWEN_XMLNode_GetIntValue($(db), "$(name)", $(default));
#endif#
      </fromxml>

      <toobject>
        {
          int64_t v64=(int64_t) ($(src));
          $(retval)=AEDB_Object_SetFieldInt64($(db), $(fieldId), v64);
        }
      </toobject>

      <fromobject>
        {
          int64_t v64;
          
          $(retval)=AEDB_Object_GetFieldInt64($(db), $(fieldId), &amp;v64);
          if ($(retval)&gt;=0)
            $(dst)=(int) v64;
        }
      </fromobject>
      
    
    </code>

    <defaults>
      <!-- defaults flags etc for member declarations of this type -->
      <default>0</default>
      <preset>0</preset>
    </defaults>
      
  </typedef>
</tm2>
